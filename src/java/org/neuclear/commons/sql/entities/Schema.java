package org.neuclear.commons.sql.entities;

import org.neuclear.commons.sql.entities.drivers.DDLDriver;

import java.util.Set;
import java.util.LinkedHashSet;
import java.util.Iterator;
import java.sql.Connection;

/*
NeuClear Distributed Transaction Clearing Platform
(C) 2003 Pelle Braendgaard

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

$Id: Schema.java,v 1.2 2003/12/31 00:39:29 pelle Exp $
$Log: Schema.java,v $
Revision 1.2  2003/12/31 00:39:29  pelle
Added Drivers for handling different Database dialects in the entity model.
Added Statement pattern to ledger, simplifying the statement writing process.

Revision 1.1  2003/12/26 22:51:17  pelle
Mainly fixes to SQLLedger to support the schema generated by the new EntityModel

*/

/**
 * User: pelleb
 * Date: Dec 26, 2003
 * Time: 3:21:10 PM
 */
public class Schema {
    public Schema(String type) {
        entities = new LinkedHashSet();
        driver=DDLDriver.getInstance(type);
    }

    public final EntityModel addEntityModel(String name){
        return addEntityModel(new EntityModel(name,true));
    }
    public final EntityModel addEntityModel(String name, boolean uri){
        return addEntityModel(new EntityModel(name,uri));
    }

    public final EntityModel addEntityModel(String name, String idname, boolean uri){
        return addEntityModel(new EntityModel(name,idname,uri));
    }
    private final EntityModel addEntityModel(EntityModel model){
        entities.add(model);
        return model;
    }
    public final void create(Connection con){
        Iterator iter=entities.iterator();
        while (iter.hasNext()) {
            EntityModel model = (EntityModel) iter.next();
            model.create(con,driver);
        }
    }
    private final DDLDriver driver;
    private final Set entities;
}
